{"version":3,"sources":["webpack:///./src/post/knowledge.vue?d62b","webpack:///./src/components/publish_header.vue?4823","webpack:///./src/service/knowledge.js","webpack:///./src/post/knowledge.vue?374d","webpack:///src/post/knowledge.vue","webpack:///./src/post/knowledge.vue?16b7","webpack:///./src/post/knowledge.vue","webpack:///./src/components/publish_header.vue?6f8c","webpack:///src/components/publish_header.vue","webpack:///./src/components/publish_header.vue?3a87","webpack:///./src/components/publish_header.vue"],"names":["get_list","params","$cms","method","url","name","data","action","isEditMode","types","options","sources","loading","knowledge","type","currentSource","processing","post","id","content","source_id","remark","tags","client","inputVisible","inputValue","latest","current","computed","$store","state","_this$$route$query","$route","query","post_id","isLatest","_this$current","_this$current$post","_this$latest","_this$latest$post","methods","loadData","_this","wiki","get","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_post$tags","source","split","loadDataByPostId","_this2","getById","_res$data3","_res$data3$data","loadTypes","_this3","loadSources","_this4","keyword","arguments","length","undefined","_search","per","list","finally","resetSource","handleSubmit","_this5","createPost","createSource","_this6","selectSource","validate","_this7","result","every","prop","$message","error","_this8","String","user_nickname","User","getInfo","join","_objectSpread","message","setTimeout","$router","push","handleInputConfirm","trim","showInput","_this9","$nextTick","_","$refs","saveTagInput","input","focus","showType","val","find","item","label","getLink","getLatest","_this$latest$post2","watch","immediate","handler","components","header","Tinymce","component","_vm","this","_c","_self","staticClass","attrs","_t","_v","model","value","callback","$$v","expression","$set","_l","key","on","_s","domProps","scopedSlots","_u","fn","_e","proxy","tag","$event","splice","ref","nativeOn","indexOf","_k","keyCode","apply","props","goBack","window","history","go","mounted"],"mappings":"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","file":"js/chunk-42d3c246.3d749b73.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./knowledge.vue?vue&type=style&index=0&id=59164897&prod&scoped=true&lang=less\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./publish_header.vue?vue&type=style&index=0&id=36319e52&prod&lang=less\"","import { $cms } from \"@jx3box/jx3box-common/js/https.js\";\n\nfunction get_menus() {\n    return $cms()({\n        method: \"GET\",\n        url: `/api/cms/helper/knowledge/types`,\n    });\n}\n\nfunction get_list(params) {\n    return $cms()({\n        method: \"GET\",\n        url: `/api/cms/helper/knowledge`,\n        params: params,\n    });\n}\n\nfunction create_knowledge(data) {\n    return $cms().post(`/api/cms/helper/knowledge`, data);\n}\n\nexport { get_menus, get_list, create_knowledge };\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./knowledge.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./knowledge.vue?vue&type=script&lang=js\"","<template>\n    <div class=\"m-publish-box\">\n        <!-- 头部 -->\n        <publish-header name=\"通识百科\">\n            <slot name=\"header\"></slot>\n        </publish-header>\n\n        <el-form class=\"m-publish-post\">\n            <div class=\"m-publish-source\">\n                <el-divider content-position=\"left\">选择通识 *</el-divider>\n                <el-radio-group class=\"m-publish-action\" v-model=\"action\">\n                    <el-radio-button label=\"new\" :disabled=\"isEditMode\">新建词条</el-radio-button>\n                    <el-radio-button label=\"update\">维护已有词条</el-radio-button>\n                </el-radio-group>\n\n                <!-- 编辑模式 -->\n                <el-input class=\"u-current-source\" v-if=\"isEditMode\" v-model=\"currentSource\" disabled></el-input>\n\n                <!-- 创建模式 -->\n                <template v-else>\n                    <template v-if=\"action == 'new'\">\n                        <!-- 创建词条 -->\n                        <div class=\"u-create-source\">\n                            <el-select class=\"u-source-type\" placeholder=\"选择通识类型\" v-model=\"knowledge.type\">\n                                <el-option\n                                    v-for=\"type in types\"\n                                    :key=\"type.name\"\n                                    :value=\"type.name\"\n                                    :label=\"type.label\"\n                                ></el-option>\n                            </el-select>\n                            <el-input\n                                class=\"u-source-name\"\n                                placeholder=\"请输入通识名称\"\n                                v-model=\"knowledge.name\"\n                            ></el-input>\n                        </div>\n                        <p class=\"u-source-add-tip\">\n                            <span>Note：添加完成后的通识需要经过管理员审核通过后才会在通识百科上展示哦</span>\n                        </p>\n                    </template>\n                    <template v-else>\n                        <!-- 更新词条 -->\n                        <el-select\n                            class=\"u-source-id\"\n                            v-model.lazy=\"post.source_id\"\n                            filterable\n                            remote\n                            placeholder=\"通过输入通识名称进行搜索\"\n                            :remote-method=\"loadSources\"\n                            :loading=\"options.loading\"\n                            clearable\n                            @change=\"selectSource\"\n                        >\n                            <el-option\n                                v-for=\"item in options.sources\"\n                                :key=\"item.id\"\n                                :label=\"item.name\"\n                                :value=\"item.id\"\n                            >\n                                <div class=\"u-option\">\n                                    <span class=\"u-type\">{{ showType(item.type) }}</span>\n                                    <span class=\"u-name\" v-text=\"item.name\"></span>\n                                </div>\n                            </el-option>\n                        </el-select>\n                    </template>\n                </template>\n            </div>\n\n            <div class=\"m-publish-remark\">\n                <el-divider content-position=\"left\">修订说明 *</el-divider>\n                <el-input\n                    v-model=\"post.remark\"\n                    :maxlength=\"200\"\n                    :minlength=\"1\"\n                    show-word-limit\n                    required\n                    placeholder=\"请简单描述一下本次修订说明\"\n                ></el-input>\n            </div>\n\n            <div class=\"m-publish-content\">\n                <el-divider content-position=\"left\">通识正文 *</el-divider>\n                <Tinymce v-model=\"post.content\" :attachmentEnable=\"true\" :resourceEnable=\"true\" :height=\"600\">\n                    <el-alert type=\"warning\" class=\"m-latest-check\" show-icon v-if=\"!isLatest && latest.post && current.post\">\n                        <template #title>\n                            <span class=\"u-alert-title\">当前百科已经有更新的版本，你的攻略可能已经失效，请先进行比对。</span>\n                            <el-link type=\"primary\" icon=\"el-icon-link\" :href=\"getLink(post.source_id)\" target=\"_blank\" class=\"u-view-latest\">查看最新攻略</el-link>\n                            <el-link @click=\"getLatest\" icon=\"el-icon-download\" class=\"u-get-latest\" type=\"primary\" v-if=\"latest.post\">获取最新攻略</el-link>\n                        </template>\n                    </el-alert>\n                </Tinymce>\n            </div>\n\n            <div class=\"m-publish-tags\">\n                <el-divider content-position=\"left\">通识标签</el-divider>\n                <el-tag\n                    :key=\"key\"\n                    v-for=\"(tag, key) in post.tags\"\n                    closable\n                    :disable-transitions=\"false\"\n                    @close=\"post.tags.splice(key, 1)\"\n                    >{{ tag }}\n                </el-tag>\n                <el-input\n                    class=\"input-new-tag\"\n                    v-if=\"inputVisible\"\n                    v-model=\"inputValue\"\n                    ref=\"saveTagInput\"\n                    size=\"small\"\n                    placeholder=\"回车以添加\"\n                    @keyup.enter.native=\"handleInputConfirm\"\n                    @blur=\"handleInputConfirm\"\n                >\n                </el-input>\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ 添加标签 </el-button>\n            </div>\n\n            <div class=\"m-publish-commit\">\n                <el-divider content-position=\"left\"></el-divider>\n                <el-button\n                    class=\"u-publish\"\n                    icon=\"el-icon-s-promotion\"\n                    type=\"primary\"\n                    @click=\"handleSubmit\"\n                    :disabled=\"processing\"\n                    >提交通识\n                </el-button>\n            </div>\n        </el-form>\n    </div>\n</template>\n\n<script>\nimport header from \"@/components/publish_header.vue\";\nimport Tinymce from \"@jx3box/jx3box-editor/src/Tinymce\";\n\n// 本地依赖\n// import { WikiPost } from \"@jx3box/jx3box-common/js/helper\";\nimport { wiki } from \"@jx3box/jx3box-common/js/wiki_v2\";\nimport User from \"@jx3box/jx3box-common/js/user\";\nimport { get_menus, get_list, create_knowledge } from \"../service/knowledge\";\nimport { iconLink, getLink } from \"@jx3box/jx3box-common/js/utils\";\n\nexport default {\n    name: \"knowledge\",\n    data() {\n        return {\n            // 用户动作\n            // ================\n            action: \"new\",\n            isEditMode: false,\n\n            // 通识信息\n            // =================\n            // 通识类别\n            types: [],\n            options: {\n                sources: [],\n                loading: false,\n            },\n            // 新建模式\n            knowledge: {\n                type: \"\",\n                name: \"\",\n            },\n            // 编辑模式\n            currentSource: \"\",\n\n            // 文章内容\n            // =================\n            processing: false,\n            post: {\n                id: \"\",\n                content: \"\",\n                source_id: \"\",\n                remark: \"\",\n                tags: [],\n                client: \"\"\n            },\n\n            // 杂项\n            // =================\n            // 标签\n            inputVisible: false,\n            inputValue: \"\",\n\n            latest: {},\n            current: {}\n        };\n    },\n    computed: {\n        client: function () {\n            return this.$store.state.client;\n        },\n        id : function (){\n            return this.$route.query?.post_id\n        },\n        // 当前比最新的攻略是否更新\n        isLatest : function (){\n            if(!this.current?.post?.id || !this.latest?.post?.id) return false\n            return this.current.post.id == this.latest.post.id\n        },\n    },\n    methods: {\n        // 加载指定通识\n        loadData: function (id) {\n            if (!id) return;\n            wiki.get({ type: \"knowledge\", id }, { client: 'all' }).then((res) => {\n                // 设置通识\n                let source = res.data?.data?.source;\n                this.currentSource = source?.name;\n                this.post.source_id = source?.id;\n\n                this.latest = res.data.data\n\n                // 设置初始文章内容（基于最新审核版本）\n                let post = res.data?.data?.post;\n                this.post.remark = post?.remark;\n                this.post.content = post?.content || \"\";\n                this.post.tags = post?.tags?.split(\",\") || [];\n            });\n        },\n        loadDataByPostId() {\n            return wiki.getById(this.id).then(res => {\n                let source = res.data?.data?.source;\n                this.currentSource = source?.name;\n                this.post.source_id = source?.id;\n\n                this.current = res.data.data\n                this.post.content = this.current.post.content\n                this.post.remark = this.current.post.remark\n                this.post.tags = this.current.post.tags.split(',') || []\n            })\n        },\n        // 加载可选类型\n        loadTypes: function () {\n            get_menus().then((res) => {\n                this.types = res.data.data;\n            });\n        },\n        // 加载通识列表\n        loadSources(keyword = \"\") {\n            this.options.loading = true;\n            get_list({\n                _search: keyword,\n                per: 10,\n            })\n                .then((res) => {\n                    this.options.sources = res.data.data.list;\n                })\n                .finally(() => {\n                    this.options.loading = false;\n                });\n        },\n        // 模式切换\n        resetSource: function () {\n            if (this.action == \"new\") {\n                // 重置通识\n                this.post.source_id = \"\";\n                this.currentSource = \"\";\n\n                // 重置内容\n                this.post.content = \"\";\n                this.post.tags = [];\n                this.post.remark = \"\";\n            }\n        },\n\n        // 发布流程\n        // ======================\n        handleSubmit: function () {\n            if (this.action == \"new\" && !this.post.source_id) {\n                this.createSource().then(() => {\n                    // 当通识已存在时，后端会自动识别为同一条词条\n                    this.createPost();\n                });\n            } else {\n                this.createPost();\n            }\n        },\n\n        // 1.创建通识词条\n        createSource() {\n            this.processing = true;\n            return create_knowledge({\n                type: this.knowledge.type,\n                name: this.knowledge.name,\n            })\n                .then((res) => {\n                    this.post.source_id = res.data.data.id;\n                    // this.$message({\n                    //     message: `${res.message}`,\n                    //     type: \"warning\",\n                    // });\n                })\n                .finally(() => {\n                    this.processing = false;\n                });\n        },\n\n        // 2.维护已有通识\n        selectSource: function (source_id) {\n            this.loadData(source_id);\n        },\n\n        // 3.校验字段\n        validate() {\n            let result = [\"source_id\", \"content\", \"remark\"].every((prop) => {\n                return !!this.post[prop];\n            });\n            if (!result) this.$message.error(\"请完成必填项\");\n            return result;\n        },\n        // 4.发布作品\n        createPost: function () {\n            // 表单校验\n            if (!this.validate()) return;\n            this.processing = true;\n            const data = {\n                source_id: String(this.post.source_id),\n                user_nickname: User.getInfo().name,\n                content: this.post.content,\n                remark: this.post.remark,\n                tags: this.post.tags.join(\",\"),\n            };\n            wiki.post({ type: \"knowledge\", ...data, client: \"all\" })\n                .then(() => {\n                        this.$message({ message: \"提交成功，请等待审核\", type: \"success\" });\n                        setTimeout(() => {\n                            this.$router.push({ name: \"wiki_post\", params: { type: \"knowledge\" } });\n                        }, 500);\n                })\n                .finally(() => {\n                    this.processing = false;\n                });\n        },\n\n        // 标签\n        // =========================\n        handleInputConfirm() {\n            let inputValue = this.inputValue.trim();\n            if (inputValue) {\n                this.post.tags.push(inputValue);\n            }\n            this.inputVisible = false;\n            this.inputValue = \"\";\n        },\n        showInput() {\n            this.inputVisible = true;\n            this.$nextTick((_) => {\n                this.$refs.saveTagInput.$refs.input.focus();\n            });\n        },\n        showType(val) {\n            return this.types.find((item) => {\n                return item.name == val;\n            }).label;\n        },\n        getLink(id) {\n            return getLink('knowledge', id)\n        },\n        getLatest() {\n            this.post.content = this.latest.post?.content || ''\n        }\n    },\n    watch: {\n        // 根据路由判定进入的模式\n        \"$route.params.source_id\": {\n            immediate: true,\n            handler: function (val) {\n                // 编辑模式\n                if (val) {\n                    this.action = \"update\";\n                    this.isEditMode = true;\n                    this.post.source_id = ~~val;\n                    this.loadData(val);\n\n                    if (this.id) {\n                        this.loadDataByPostId()\n                    }\n                    // 创建模式\n                } else {\n                    this.action = \"new\";\n                    // 获取类型\n                    this.loadTypes();\n                    // 获取列表\n                    this.loadSources();\n                }\n            },\n        },\n        // 创建模式切换action\n        action: {\n            handler: function () {\n                if (!this.isEditMode) {\n                    this.resetSource();\n                }\n            },\n        },\n    },\n    components: {\n        \"publish-header\": header,\n        Tinymce,\n    },\n};\n</script>\n\n<style scoped lang=\"less\">\n@import \"../assets/css/knowledge.less\";\n@import \"../assets/css/wiki.less\";\n</style>\n","import { render, staticRenderFns } from \"./knowledge.vue?vue&type=template&id=59164897&scoped=true\"\nimport script from \"./knowledge.vue?vue&type=script&lang=js\"\nexport * from \"./knowledge.vue?vue&type=script&lang=js\"\nimport style0 from \"./knowledge.vue?vue&type=style&index=0&id=59164897&prod&scoped=true&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59164897\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"m-publish-box\"},[_c('publish-header',{attrs:{\"name\":\"通识百科\"}},[_vm._t(\"header\")],2),_c('el-form',{staticClass:\"m-publish-post\"},[_c('div',{staticClass:\"m-publish-source\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"选择通识 *\")]),_c('el-radio-group',{staticClass:\"m-publish-action\",model:{value:(_vm.action),callback:function ($$v) {_vm.action=$$v},expression:\"action\"}},[_c('el-radio-button',{attrs:{\"label\":\"new\",\"disabled\":_vm.isEditMode}},[_vm._v(\"新建词条\")]),_c('el-radio-button',{attrs:{\"label\":\"update\"}},[_vm._v(\"维护已有词条\")])],1),(_vm.isEditMode)?_c('el-input',{staticClass:\"u-current-source\",attrs:{\"disabled\":\"\"},model:{value:(_vm.currentSource),callback:function ($$v) {_vm.currentSource=$$v},expression:\"currentSource\"}}):[(_vm.action == 'new')?[_c('div',{staticClass:\"u-create-source\"},[_c('el-select',{staticClass:\"u-source-type\",attrs:{\"placeholder\":\"选择通识类型\"},model:{value:(_vm.knowledge.type),callback:function ($$v) {_vm.$set(_vm.knowledge, \"type\", $$v)},expression:\"knowledge.type\"}},_vm._l((_vm.types),function(type){return _c('el-option',{key:type.name,attrs:{\"value\":type.name,\"label\":type.label}})}),1),_c('el-input',{staticClass:\"u-source-name\",attrs:{\"placeholder\":\"请输入通识名称\"},model:{value:(_vm.knowledge.name),callback:function ($$v) {_vm.$set(_vm.knowledge, \"name\", $$v)},expression:\"knowledge.name\"}})],1),_c('p',{staticClass:\"u-source-add-tip\"},[_c('span',[_vm._v(\"Note：添加完成后的通识需要经过管理员审核通过后才会在通识百科上展示哦\")])])]:[_c('el-select',{staticClass:\"u-source-id\",attrs:{\"filterable\":\"\",\"remote\":\"\",\"placeholder\":\"通过输入通识名称进行搜索\",\"remote-method\":_vm.loadSources,\"loading\":_vm.options.loading,\"clearable\":\"\"},on:{\"change\":_vm.selectSource},model:{value:(_vm.post.source_id),callback:function ($$v) {_vm.$set(_vm.post, \"source_id\", $$v)},expression:\"post.source_id\"}},_vm._l((_vm.options.sources),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}},[_c('div',{staticClass:\"u-option\"},[_c('span',{staticClass:\"u-type\"},[_vm._v(_vm._s(_vm.showType(item.type)))]),_c('span',{staticClass:\"u-name\",domProps:{\"textContent\":_vm._s(item.name)}})])])}),1)]]],2),_c('div',{staticClass:\"m-publish-remark\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"修订说明 *\")]),_c('el-input',{attrs:{\"maxlength\":200,\"minlength\":1,\"show-word-limit\":\"\",\"required\":\"\",\"placeholder\":\"请简单描述一下本次修订说明\"},model:{value:(_vm.post.remark),callback:function ($$v) {_vm.$set(_vm.post, \"remark\", $$v)},expression:\"post.remark\"}})],1),_c('div',{staticClass:\"m-publish-content\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"通识正文 *\")]),_c('Tinymce',{attrs:{\"attachmentEnable\":true,\"resourceEnable\":true,\"height\":600},model:{value:(_vm.post.content),callback:function ($$v) {_vm.$set(_vm.post, \"content\", $$v)},expression:\"post.content\"}},[(!_vm.isLatest && _vm.latest.post && _vm.current.post)?_c('el-alert',{staticClass:\"m-latest-check\",attrs:{\"type\":\"warning\",\"show-icon\":\"\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('span',{staticClass:\"u-alert-title\"},[_vm._v(\"当前百科已经有更新的版本，你的攻略可能已经失效，请先进行比对。\")]),_c('el-link',{staticClass:\"u-view-latest\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-link\",\"href\":_vm.getLink(_vm.post.source_id),\"target\":\"_blank\"}},[_vm._v(\"查看最新攻略\")]),(_vm.latest.post)?_c('el-link',{staticClass:\"u-get-latest\",attrs:{\"icon\":\"el-icon-download\",\"type\":\"primary\"},on:{\"click\":_vm.getLatest}},[_vm._v(\"获取最新攻略\")]):_vm._e()]},proxy:true}],null,false,2238318328)}):_vm._e()],1)],1),_c('div',{staticClass:\"m-publish-tags\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"通识标签\")]),_vm._l((_vm.post.tags),function(tag,key){return _c('el-tag',{key:key,attrs:{\"closable\":\"\",\"disable-transitions\":false},on:{\"close\":function($event){return _vm.post.tags.splice(key, 1)}}},[_vm._v(_vm._s(tag)+\" \")])}),(_vm.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\",\"placeholder\":\"回车以添加\"},on:{\"blur\":_vm.handleInputConfirm},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm.apply(null, arguments)}},model:{value:(_vm.inputValue),callback:function ($$v) {_vm.inputValue=$$v},expression:\"inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":_vm.showInput}},[_vm._v(\"+ 添加标签 \")])],2),_c('div',{staticClass:\"m-publish-commit\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}}),_c('el-button',{staticClass:\"u-publish\",attrs:{\"icon\":\"el-icon-s-promotion\",\"type\":\"primary\",\"disabled\":_vm.processing},on:{\"click\":_vm.handleSubmit}},[_vm._v(\"提交通识 \")])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./publish_header.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./publish_header.vue?vue&type=script&lang=js\"","<template>\n    <div class=\"m-publish-header\">\n        <el-page-header @back=\"goBack\" :content=\"name\"></el-page-header>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"publish_header\",\n    props: [\"name\"],\n    data: function() {\n        return {\n        };\n    },\n    computed: {},\n    methods: {\n        goBack: function() {\n            if(window.history.length){\n                this.$router.go(-1);\n            }else{\n                this.$router.push('/')\n            }\n        },\n    },\n    mounted: function() {},\n    components: {\n    },\n};\n</script>\n\n<style lang=\"less\">\n    .m-publish-header{\n        .pr;\n    }\n    \n</style>","import { render, staticRenderFns } from \"./publish_header.vue?vue&type=template&id=36319e52\"\nimport script from \"./publish_header.vue?vue&type=script&lang=js\"\nexport * from \"./publish_header.vue?vue&type=script&lang=js\"\nimport style0 from \"./publish_header.vue?vue&type=style&index=0&id=36319e52&prod&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"m-publish-header\"},[_c('el-page-header',{attrs:{\"content\":_vm.name},on:{\"back\":_vm.goBack}}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}